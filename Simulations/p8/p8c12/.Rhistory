Amimat <- Addmat*Mtdmat
Dmgmat <- Addmat*Addmat
# Trial-Combination 11
ad2 <- c( .6, .6, .6, .4, .4, .4, .2, .2, .2, .4, .4, .4)
dd2 <- c( .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .1, .0)
cn2 <- c( .1, .1, .1, .1, .1, .1, .1, .1, .1, .2, .1, .1)
ce2 <- c( .1, .1, .1, .1, .1, .1, .1, .1, .1, .1, .1, .1)
mt2 <- c( .1,.05,.01, .1,.05,.01, .1,.05,.01,.05,.05, .1)
am2 <- c(.05,.05,.05,.05,.05,.05,.05,.05,.05,.05,.05, .1)
ee2 <- c(.05, .1,.19,.25,.30,.39,.45,.50,.59, .2, .2, .2)
## generate data
library(mvtnorm)
comb <- 12
sumCov <- ad2[comb]*Addmat + dd2[comb]*Addmat*Addmat + cn2[comb]*Nucmat + ce2[comb]*Extmat + mt2[comb]*Mtdmat + am2[comb]*Addmat*Mtdmat + ee2[comb]*Envmat
set.seed(14271)
numfam <- round(10000/nrow(Addmat))
dat <- rmvnorm(numfam, sigma = sumCov)
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# fit ML model
totalVar <- 1
totalMea <- 0
ObjectsKeep <- as.character(ls())
## the full model
Model1 <- mxModel(
"ModelOne",
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ad2[comb]*totalVar, labels = "vad", name = "Vad", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = dd2[comb]*totalVar, labels = "vdd", name = "Vdd", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = cn2[comb]*totalVar, labels = "vcn", name = "Vcn", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ce2[comb]*totalVar, labels = "vce", name = "Vce", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = mt2[comb]*totalVar, labels = "vmt", name = "Vmt", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = am2[comb]*totalVar, labels = "vam", name = "Vam", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ee2[comb]*totalVar, labels = "ver", name = "Ver", lbound = 1e-10)
)
ll <- list()
for (i in 1:numfam){
ll[[i]] <- dat[i,]
}
modList <- list()
modNames <- paste0("fam", 1:numfam)
for(afam in 1:numfam){
ytemp <- paste('S', rownames (Addmat))
fsize <- nrow(Addmat)
modList[[afam]] <- mxModel(name=modNames[afam],
mxMatrix("Iden", nrow=fsize, ncol=fsize, name="I"),
mxMatrix("Unit", nrow=fsize, ncol=fsize, name='U'),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Addmat, name="A"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Dmgmat, name="D"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Nucmat, name="Cn"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Extmat, name="Ce"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Amimat, name="Am"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Mtdmat, name="Mt"),
mxData(observed = matrix(ll[[afam]], nrow=1, dimnames=list(NULL, ytemp)), type="raw", sort=FALSE),
mxMatrix('Full', nrow=1, ncol=fsize, name='M', free=TRUE, labels='meanLI',
dimnames=list(NULL, ytemp)),
mxAlgebra ((A %x% ModelOne.Vad)
+ (D %x% ModelOne.Vdd)
+ (Cn %x% ModelOne.Vcn)
+ (U %x% ModelOne.Vce)
+ (Mt %x% ModelOne.Vmt)
+ (Am %x% ModelOne.Vam)
+ (I %x% ModelOne.Ver),
name="V", dimnames=list(ytemp, ytemp)),
mxExpectationNormal(covariance='V', means='M'),
mxFitFunctionML()
)
}
container <- mxModel('Model2', Model1, modList, mxFitFunctionMultigroup(modNames))
container <- mxOption(container, 'Checkpoint Units', 'minutes')
container <- mxOption(container, 'Checkpoint Count', 1)
containerRun <- mxRun(container, intervals=FALSE, checkpoint=TRUE)
smr1 <- summary(containerRun)
save.image(file = "model1.RData")
rm(list = setdiff(ls(), c(ObjectsKeep, "ObjectsKeep", "smr1")))
##### Model excluding mt and am
Model4 <- mxModel(
"ModelThree",
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ad2[comb]*totalVar, labels = "vad", name = "Vad", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = dd2[comb]*totalVar, labels = "vdd", name = "Vdd", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = cn2[comb]*totalVar, labels = "vcn", name = "Vcn", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ce2[comb]*totalVar, labels = "vce", name = "Vce", lbound = 1e-10),
#mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = mt2[comb]*totalVar, labels = "vmt", name = "Vmt", lbound = 1e-10),
#mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = am2[comb]*totalVar, labels = "vam", name = "Vam", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ee2[comb]*totalVar, labels = "ver", name = "Ver", lbound = 1e-10)
)
ll2 <- list()
for (i in 1:numfam){
ll2[[i]] <- dat[i,]
}
modList2 <- list()
modNames2 <- paste0("fam", 1:numfam)
for(afam2 in 1:numfam){
ytemp2 <- paste('S', rownames (Addmat))
fsize2 <- nrow(Addmat)
modList2[[afam2]] <- mxModel(name=modNames2[afam2],
mxMatrix("Iden", nrow=fsize2, ncol=fsize2, name="I"),
mxMatrix("Unit", nrow=fsize2, ncol=fsize2, name='U'),
mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Addmat, name="A"),
mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Dmgmat, name="D"),
mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Nucmat, name="Cn"),
mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Extmat, name="Ce"),
#mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Amimat, name="Am"),
#mxMatrix("Symm", nrow=fsize2, ncol=fsize2, values=Mtdmat, name="Mt"),
mxData(observed = matrix(ll2[[afam2]], nrow=1, dimnames=list(NULL, ytemp2)), type="raw", sort=FALSE),
mxMatrix('Full', nrow=1, ncol=fsize2, name='M', free=TRUE, labels='meanLI',
dimnames=list(NULL, ytemp2)),
mxAlgebra ((A %x% ModelThree.Vad)
+ (D %x% ModelThree.Vdd)
+ (Cn %x% ModelThree.Vcn)
+ (U %x% ModelThree.Vce)
#+ (Mt %x% ModelThree.Vmt)
#+ (Am %x% ModelThree.Vam)
+ (I %x% ModelThree.Ver),
name="V", dimnames=list(ytemp2, ytemp2)),
mxExpectationNormal(covariance='V', means='M'),
mxFitFunctionML()
)
}
container2 <- mxModel('Model4', Model4, modList2, mxFitFunctionMultigroup(modNames2))
container2 <- mxOption(container2, 'Checkpoint Units', 'minutes')
container2 <- mxOption(container2, 'Checkpoint Count', 1)
containerRun2 <- mxRun(container2, intervals=FALSE, checkpoint=TRUE)
smr2 <- summary(containerRun2)
save.image(file = "model2.RData")
rm(list = setdiff(ls(), c(ObjectsKeep,"ObjectsKeep", "smr1", "smr2")))
##### Model excluding mt
Model5 <- mxModel(
"ModelFive",
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ad2[comb]*totalVar, labels = "vad", name = "Vad", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = dd2[comb]*totalVar, labels = "vdd", name = "Vdd", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = cn2[comb]*totalVar, labels = "vcn", name = "Vcn", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ce2[comb]*totalVar, labels = "vce", name = "Vce", lbound = 1e-10),
#mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = mt2[comb]*totalVar, labels = "vmt", name = "Vmt", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = am2[comb]*totalVar, labels = "vam", name = "Vam", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ee2[comb]*totalVar, labels = "ver", name = "Ver", lbound = 1e-10)
)
ll3 <- list()
for (i in 1:numfam){
ll3[[i]] <- dat[i,]
}
modList3 <- list()
modNames3 <- paste0("fam", 1:numfam)
for(afam3 in 1:numfam){
ytemp3 <- paste('S', rownames (Addmat))
fsize3 <- nrow(Addmat)
modList3[[afam3]] <- mxModel(name=modNames3[afam3],
mxMatrix("Iden", nrow=fsize3, ncol=fsize3, name="I"),
mxMatrix("Unit", nrow=fsize3, ncol=fsize3, name='U'),
mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Addmat, name="A"),
mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Dmgmat, name="D"),
mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Nucmat, name="Cn"),
mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Extmat, name="Ce"),
mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Amimat, name="Am"),
#mxMatrix("Symm", nrow=fsize3, ncol=fsize3, values=Mtdmat, name="Mt"),
mxData(observed = matrix(ll3[[afam3]], nrow=1, dimnames=list(NULL, ytemp3)), type="raw", sort=FALSE),
mxMatrix('Full', nrow=1, ncol=fsize3, name='M', free=TRUE, labels='meanLI',
dimnames=list(NULL, ytemp3)),
mxAlgebra ((A %x% ModelFive.Vad)
+ (D %x% ModelFive.Vdd)
+ (Cn %x% ModelFive.Vcn)
+ (U %x% ModelFive.Vce)
#+ (Mt %x% ModelFive.Vmt)
+ (Am %x% ModelFive.Vam)
+ (I %x% ModelFive.Ver),
name="V", dimnames=list(ytemp3, ytemp3)),
mxExpectationNormal(covariance='V', means='M'),
mxFitFunctionML()
)
}
container3 <- mxModel('Model6', Model5, modList3, mxFitFunctionMultigroup(modNames3))
container3 <- mxOption(container3, 'Checkpoint Units', 'minutes')
container3 <- mxOption(container3, 'Checkpoint Count', 1)
containerRun3 <- mxRun(container3, intervals=FALSE, checkpoint=TRUE)
smr3 <- summary(containerRun3)
save.image(file = "model3.RData")
rm(list = setdiff(ls(), c(ObjectsKeep,"ObjectsKeep", "smr1", "smr2", "smr3")))
##### Model excluding am
Model7 <- mxModel(
"ModelSeven",
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ad2[comb]*totalVar, labels = "vad", name = "Vad", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = dd2[comb]*totalVar, labels = "vdd", name = "Vdd", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = cn2[comb]*totalVar, labels = "vcn", name = "Vcn", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ce2[comb]*totalVar, labels = "vce", name = "Vce", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = mt2[comb]*totalVar, labels = "vmt", name = "Vmt", lbound = 1e-10),
#mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = am2[comb]*totalVar, labels = "vam", name = "Vam", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ee2[comb]*totalVar, labels = "ver", name = "Ver", lbound = 1e-10)
)
ll4 <- list()
for (i in 1:numfam){
ll4[[i]] <- dat[i,]
}
modList4 <- list()
modNames4 <- paste0("fam", 1:numfam)
for(afam4 in 1:numfam){
ytemp4 <- paste('S', rownames (Addmat))
fsize4 <- nrow(Addmat)
modList4[[afam4]] <- mxModel(name=modNames4[afam4],
mxMatrix("Iden", nrow=fsize4, ncol=fsize4, name="I"),
mxMatrix("Unit", nrow=fsize4, ncol=fsize4, name='U'),
mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Addmat, name="A"),
mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Dmgmat, name="D"),
mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Nucmat, name="Cn"),
mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Extmat, name="Ce"),
#mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Amimat, name="Am"),
mxMatrix("Symm", nrow=fsize4, ncol=fsize4, values=Mtdmat, name="Mt"),
mxData(observed = matrix(ll4[[afam4]], nrow=1, dimnames=list(NULL, ytemp4)), type="raw", sort=FALSE),
mxMatrix('Full', nrow=1, ncol=fsize4, name='M', free=TRUE, labels='meanLI',
dimnames=list(NULL, ytemp4)),
mxAlgebra ((A %x% ModelSeven.Vad)
+ (D %x% ModelSeven.Vdd)
+ (Cn %x% ModelSeven.Vcn)
+ (U %x% ModelSeven.Vce)
+ (Mt %x% ModelSeven.Vmt)
#+ (Am %x% ModelSeven.Vam)
+ (I %x% ModelSeven.Ver),
name="V", dimnames=list(ytemp4, ytemp4)),
mxExpectationNormal(covariance='V', means='M'),
mxFitFunctionML()
)
}
container4 <- mxModel('Model8', Model7, modList4, mxFitFunctionMultigroup(modNames4))
container4 <- mxOption(container4, 'Checkpoint Units', 'minutes')
container4 <- mxOption(container4, 'Checkpoint Count', 1)
containerRun4 <- mxRun(container4, intervals=FALSE, checkpoint=TRUE)
smr4 <- summary(containerRun4)
save.image(file = "model4.RData")
rm(list = setdiff(ls(), c("smr1", "smr2", "smr3", "smr4")))
save.image(file = "modelSmr.RData")
rm(list = ls())
###code to run first trial of simulation
#source("~/R-Project/BalancedPed/evenInsert.R")
#source("~/R-Project/BalancedPed/famSizeCal.R")
#source("~/R-Project/BalancedPed/SimPed.R")
source("~/R-Project/BalancedPed/HelperFunctions.R")
setwd("~/R-Project/BalancedPed/Simulations/p8/p8c12")
library(OpenMx)
load("~/R-Project/BalancedPed/FixedPed.RData")
sampleFam <- ped8
Addmat <- as.matrix(ped2add(sampleFam, verbose = TRUE))
Nucmat <- ped2cn(sampleFam)
Extmat <- ped2ce(sampleFam)
Mtdmat <- ped2mt_v3(sampleFam)
Envmat <- diag(1,nrow = nrow(Addmat))
dimnames(Envmat) <- dimnames(Addmat)
Amimat <- Addmat*Mtdmat
Dmgmat <- Addmat*Addmat
# Trial-Combination 11
ad2 <- c( .6, .6, .6, .4, .4, .4, .2, .2, .2, .4, .4, .4)
dd2 <- c( .0, .0, .0, .0, .0, .0, .0, .0, .0, .0, .1, .0)
cn2 <- c( .1, .1, .1, .1, .1, .1, .1, .1, .1, .2, .1, .1)
ce2 <- c( .1, .1, .1, .1, .1, .1, .1, .1, .1, .1, .1, .1)
mt2 <- c( .1,.05,.01, .1,.05,.01, .1,.05,.01,.05,.05, .1)
am2 <- c(.05,.05,.05,.05,.05,.05,.05,.05,.05,.05,.05, .1)
ee2 <- c(.05, .1,.19,.25,.30,.39,.45,.50,.59, .2, .2, .2)
## generate data
library(mvtnorm)
comb <- 12
sumCov <- ad2[comb]*Addmat + dd2[comb]*Addmat*Addmat + cn2[comb]*Nucmat + ce2[comb]*Extmat + mt2[comb]*Mtdmat + am2[comb]*Addmat*Mtdmat + ee2[comb]*Envmat
set.seed(14271)
numfam <- round(10000/nrow(Addmat))
dat <- rmvnorm(numfam, sigma = sumCov)
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# fit ML model
totalVar <- 1
totalMea <- 0
ObjectsKeep <- as.character(ls())
## the full model
Model1 <- mxModel(
"ModelOne",
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ad2[comb]*totalVar, labels = "vad", name = "Vad", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = dd2[comb]*totalVar, labels = "vdd", name = "Vdd", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = cn2[comb]*totalVar, labels = "vcn", name = "Vcn", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ce2[comb]*totalVar, labels = "vce", name = "Vce", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = mt2[comb]*totalVar, labels = "vmt", name = "Vmt", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = am2[comb]*totalVar, labels = "vam", name = "Vam", lbound = 1e-10),
mxMatrix(type = "Full", nrow = 1, ncol = 1, free = TRUE, values = ee2[comb]*totalVar, labels = "ver", name = "Ver", lbound = 1e-10)
)
ll <- list()
for (i in 1:numfam){
ll[[i]] <- dat[i,]
}
modList <- list()
modNames <- paste0("fam", 1:numfam)
for(afam in 1:numfam){
ytemp <- paste('S', rownames (Addmat))
fsize <- nrow(Addmat)
modList[[afam]] <- mxModel(name=modNames[afam],
mxMatrix("Iden", nrow=fsize, ncol=fsize, name="I"),
mxMatrix("Unit", nrow=fsize, ncol=fsize, name='U'),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Addmat, name="A"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Dmgmat, name="D"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Nucmat, name="Cn"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Extmat, name="Ce"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Amimat, name="Am"),
mxMatrix("Symm", nrow=fsize, ncol=fsize, values=Mtdmat, name="Mt"),
mxData(observed = matrix(ll[[afam]], nrow=1, dimnames=list(NULL, ytemp)), type="raw", sort=FALSE),
mxMatrix('Full', nrow=1, ncol=fsize, name='M', free=TRUE, labels='meanLI',
dimnames=list(NULL, ytemp)),
mxAlgebra ((A %x% ModelOne.Vad)
+ (D %x% ModelOne.Vdd)
+ (Cn %x% ModelOne.Vcn)
+ (U %x% ModelOne.Vce)
+ (Mt %x% ModelOne.Vmt)
+ (Am %x% ModelOne.Vam)
+ (I %x% ModelOne.Ver),
name="V", dimnames=list(ytemp, ytemp)),
mxExpectationNormal(covariance='V', means='M'),
mxFitFunctionML()
)
}
# script to plot power plots
library(ggplot2)
powerCal <- function(lamda,df){
1- pchisq(qchisq(1-.05, df), df, lamda)
}
my_palette <- c("#377EB8", "#E69F00", "#4DAF4A", "#117A65", "#56B4E9", "#A6CE39", "#A9A9A9", "#E41A1C", "#88CCEE", "#CC6677", "#DDCC77", "#AA4499", "#332288",  "#999933", "#882255", "#984EA3")
num_ped <- 500
### create a new enviroment for one condition
env_p5c1 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c1/modelSmr.Rdata", envir = env_p5c1)
meanDiffLL_mtam_p5c1 <- env_p5c1$smr2$Minus2LogLikelihood - env_p5c1$smr1$Minus2LogLikelihood
lamdaUnit_p5c1 <- meanDiffLL_mtam_p5c1/env_p5c1$smr1$numObs
SSize_p5c1 <- 1: num_ped
LamdaVec_p5c1 <- lamdaUnit_p5c1*SSize_p5c1
powVec_p5c1 <- as.numeric(lapply(LamdaVec_p5c1,powerCal, df = 2))
df_p5c1 <- data.frame(Nped = SSize_p5c1,
power = powVec_p5c1,
Combination = rep("power1", num_ped))
### create a new enviroment for one condition
env_p5c2 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c2/modelSmr.Rdata", envir = env_p5c2)
meanDiffLL_mtam_p5c2 <- env_p5c2$smr2$Minus2LogLikelihood - env_p5c2$smr1$Minus2LogLikelihood
lamdaUnit_p5c2 <- meanDiffLL_mtam_p5c2/env_p5c2$smr1$numObs
SSize_p5c2 <- 1: num_ped
LamdaVec_p5c2 <- lamdaUnit_p5c2*SSize_p5c2
powVec_p5c2 <- as.numeric(lapply(LamdaVec_p5c2,powerCal, df = 2))
df_p5c2 <- data.frame(Nped = SSize_p5c2,
power = powVec_p5c2,
Combination = rep("power2", num_ped))
### create a new enviroment for one condition
env_p5c3 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c3/modelSmr.Rdata", envir = env_p5c3)
meanDiffLL_mtam_p5c3 <- env_p5c3$smr2$Minus2LogLikelihood - env_p5c3$smr1$Minus2LogLikelihood
lamdaUnit_p5c3 <- meanDiffLL_mtam_p5c3/env_p5c3$smr1$numObs
SSize_p5c3 <- 1: num_ped
LamdaVec_p5c3 <- lamdaUnit_p5c3*SSize_p5c3
powVec_p5c3 <- as.numeric(lapply(LamdaVec_p5c3,powerCal, df = 2))
df_p5c3 <- data.frame(Nped = SSize_p5c3,
power = powVec_p5c3,
Combination = rep("power3", num_ped))
### create a new enviroment for one condition
env_p5c4 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c4/modelSmr.Rdata", envir = env_p5c4)
meanDiffLL_mtam_p5c4 <- env_p5c4$smr2$Minus2LogLikelihood - env_p5c4$smr1$Minus2LogLikelihood
lamdaUnit_p5c4 <- meanDiffLL_mtam_p5c4/env_p5c4$smr1$numObs
SSize_p5c4 <- 1: num_ped
LamdaVec_p5c4 <- lamdaUnit_p5c4*SSize_p5c4
powVec_p5c4 <- as.numeric(lapply(LamdaVec_p5c4,powerCal, df = 2))
df_p5c4 <- data.frame(Nped = SSize_p5c4,
power = powVec_p5c4,
Combination = rep("power4", num_ped))
### create a new enviroment for one condition
env_p5c5 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c5/modelSmr.Rdata", envir = env_p5c5)
meanDiffLL_mtam_p5c5 <- env_p5c5$smr2$Minus2LogLikelihood - env_p5c5$smr1$Minus2LogLikelihood
lamdaUnit_p5c5 <- meanDiffLL_mtam_p5c5/env_p5c5$smr1$numObs
SSize_p5c5 <- 1: num_ped
LamdaVec_p5c5 <- lamdaUnit_p5c5*SSize_p5c5
powVec_p5c5 <- as.numeric(lapply(LamdaVec_p5c5,powerCal, df = 2))
df_p5c5 <- data.frame(Nped = SSize_p5c5,
power = powVec_p5c5,
Combination = rep("power5", num_ped))
### create a new enviroment for one condition
env_p5c6 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c6/modelSmr.Rdata", envir = env_p5c6)
meanDiffLL_mtam_p5c6 <- env_p5c6$smr2$Minus2LogLikelihood - env_p5c6$smr1$Minus2LogLikelihood
lamdaUnit_p5c6 <- meanDiffLL_mtam_p5c6/env_p5c6$smr1$numObs
SSize_p5c6 <- 1: num_ped
LamdaVec_p5c6 <- lamdaUnit_p5c6*SSize_p5c6
powVec_p5c6 <- as.numeric(lapply(LamdaVec_p5c6,powerCal, df = 2))
df_p5c6 <- data.frame(Nped = SSize_p5c6,
power = powVec_p5c6,
Combination = rep("power6", num_ped))
### create a new enviroment for one condition
env_p5c7 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c7/modelSmr.Rdata", envir = env_p5c7)
meanDiffLL_mtam_p5c7 <- env_p5c7$smr2$Minus2LogLikelihood - env_p5c7$smr1$Minus2LogLikelihood
lamdaUnit_p5c7 <- meanDiffLL_mtam_p5c7/env_p5c7$smr1$numObs
SSize_p5c7 <- 1: num_ped
LamdaVec_p5c7 <- lamdaUnit_p5c7*SSize_p5c7
powVec_p5c7 <- as.numeric(lapply(LamdaVec_p5c7,powerCal, df = 2))
df_p5c7 <- data.frame(Nped = SSize_p5c7,
power = powVec_p5c7,
Combination = rep("power7", num_ped))
### create a new enviroment for one condition
env_p5c8 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c8/modelSmr.Rdata", envir = env_p5c8)
meanDiffLL_mtam_p5c8 <- env_p5c8$smr2$Minus2LogLikelihood - env_p5c8$smr1$Minus2LogLikelihood
lamdaUnit_p5c8 <- meanDiffLL_mtam_p5c8/env_p5c8$smr1$numObs
SSize_p5c8 <- 1: num_ped
LamdaVec_p5c8 <- lamdaUnit_p5c8*SSize_p5c8
powVec_p5c8 <- as.numeric(lapply(LamdaVec_p5c8,powerCal, df = 2))
df_p5c8 <- data.frame(Nped = SSize_p5c8,
power = powVec_p5c8,
Combination = rep("power8", num_ped))
### create a new enviroment for one condition
env_p5c9 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c9/modelSmr.Rdata", envir = env_p5c9)
meanDiffLL_mtam_p5c9 <- env_p5c9$smr2$Minus2LogLikelihood - env_p5c9$smr1$Minus2LogLikelihood
lamdaUnit_p5c9 <- meanDiffLL_mtam_p5c9/env_p5c9$smr1$numObs
SSize_p5c9 <- 1: num_ped
LamdaVec_p5c9 <- lamdaUnit_p5c9*SSize_p5c9
powVec_p5c9 <- as.numeric(lapply(LamdaVec_p5c9,powerCal, df = 2))
df_p5c9 <- data.frame(Nped = SSize_p5c9,
power = powVec_p5c9,
Combination = rep("power9", num_ped))
### create a new enviroment for one condition
env_p5c10 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c10/modelSmr.Rdata", envir = env_p5c10)
meanDiffLL_mtam_p5c10 <- env_p5c10$smr2$Minus2LogLikelihood - env_p5c10$smr1$Minus2LogLikelihood
lamdaUnit_p5c10 <- meanDiffLL_mtam_p5c10/env_p5c10$smr1$numObs
SSize_p5c10 <- 1: num_ped
LamdaVec_p5c10 <- lamdaUnit_p5c10*SSize_p5c10
powVec_p5c10 <- as.numeric(lapply(LamdaVec_p5c10,powerCal, df = 2))
df_p5c10 <- data.frame(Nped = SSize_p5c10,
power = powVec_p5c10,
Combination = rep("power10", num_ped))
### create a new enviroment for one condition
env_p5c11 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c11/modelSmr.Rdata", envir = env_p5c11)
meanDiffLL_mtam_p5c11 <- env_p5c11$smr2$Minus2LogLikelihood - env_p5c11$smr1$Minus2LogLikelihood
lamdaUnit_p5c11 <- meanDiffLL_mtam_p5c11/env_p5c11$smr1$numObs
SSize_p5c11 <- 1: num_ped
LamdaVec_p5c11 <- lamdaUnit_p5c11*SSize_p5c11
powVec_p5c11 <- as.numeric(lapply(LamdaVec_p5c11,powerCal, df = 2))
df_p5c11 <- data.frame(Nped = SSize_p5c11,
power = powVec_p5c11,
Combination = rep("power11", num_ped))
### create a new enviroment for one condition
env_p5c12 <- new.env()
load("~/R-Project/BalancedPed/Simulations/p5/p5c12/modelSmr.Rdata", envir = env_p5c12)
meanDiffLL_mtam_p5c12 <- env_p5c12$smr2$Minus2LogLikelihood - env_p5c12$smr1$Minus2LogLikelihood
lamdaUnit_p5c12 <- meanDiffLL_mtam_p5c12/env_p5c12$smr1$numObs
SSize_p5c12 <- 1: num_ped
LamdaVec_p5c12 <- lamdaUnit_p5c12*SSize_p5c12
powVec_p5c12 <- as.numeric(lapply(LamdaVec_p5c12,powerCal, df = 2))
df_p5c12 <- data.frame(Nped = SSize_p5c12,
power = powVec_p5c12,
Combination = rep("power12", num_ped))
### create a data frame for graphs
df_p5 <- rbind(df_p5c1, df_p5c2,df_p5c3,df_p5c4, df_p5c5,df_p5c6,df_p5c7, df_p5c8,df_p5c9,df_p5c10, df_p5c11, df_p5c12)
df_p5$Combination <- as.factor(df_p5$Combination)
g1 <-ggplot(data = df_p5)+ geom_line(mapping = aes(x = Nped, y = power, color= Combination), size = 1, alpha = .8) +
scale_color_manual(values=my_palette[1:12],
name="Variance Combinations",
breaks=c("power1", "power4", "power7", "power12", "power2","power11","power5","power8","power10","power3","power6","power9"),
labels=c("a\u00B2 = .60, mt\u00B2 = .10, e\u00B2 = .05",
"a\u00B2 = .40, mt\u00B2 = .10, e\u00B2 = .25",
"a\u00B2 = .20, mt\u00B2 = .10, e\u00B2 = .45",
"a\u00B2 = .40, mt\u00B2 = .10, e\u00B2 = .20, j\u00B2 = .1",
"a\u00B2 = .60, mt\u00B2 = .05, e\u00B2 = .10",
"a\u00B2 = .40, mt\u00B2 = .05, e\u00B2 = .20, d\u00B2 = .10",
"a\u00B2 = .40, mt\u00B2 = .05, e\u00B2 = .30",
"a\u00B2 = .20, mt\u00B2 = .05, e\u00B2 = .50",
"a\u00B2 = .40, mt\u00B2 = .05, e\u00B2 = .20, cn\u00B2 = .10",
"a\u00B2 = .60, mt\u00B2 = .01, e\u00B2 = .19",
"a\u00B2 = .40, mt\u00B2 = .01, e\u00B2 = .39",
"a\u00B2 = .20, mt\u00B2 = .01, e\u00B2 = .59"
)
)+
theme(plot.margin = margin(5,200,5,5,"pt"),
panel.background = element_rect(fill = "transparent"),
panel.grid = element_line(color = "transparent"),
axis.line = element_line(size = 1, colour = "black"),
#axis.line.y = element_blank(),
axis.text = element_text( color = "black"),
#axis.text.y = element_blank(),
#axis.ticks.y = element_blank(),
text=element_text( family="Calibri",  size = 12),
legend.spacing = unit(-17,'pt'),
legend.margin = margin(t=0,b=0,unit='pt'),
legend.background = element_rect(),
legend.position=c(1.2,.5))+
xlab("N of Pedigrees")+
scale_y_continuous(n.breaks = 6)+
ylab("Power (mt\u00B2+j\u00B2)")+
geom_hline(yintercept = .8, linetype = 5, size = .8, color = "grey")
# +
# annotate(geom = "text",x = 0.62, y =.92, label = "a\u00B2 = .6", family="Calibri", color = "gray40",size = 3)+
# annotate(geom = "text",x = 0.73, y =.6, label = "a\u00B2 = .4", family="Calibri", color = "gray40",size = 3)+
# annotate(geom = "text",x = 0.9, y =.6, label = "a\u00B2 = .2", family="Calibri", color = "gray40",size = 3)+
# annotate(geom = "text",x = 0.9, y =.6, label = "a\u00B2 = .4, d\u00B2 = .1", family="Calibri", color = "gray40",size = 3)
g1
ggsave( "~/R-Project/BalancedPed/Simulations/p5/graph2.png",g1, width = 10, height = 4.5,  type = "cairo-png", dpi = 900)
rm(list = ls())
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p2/p2c12/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p2/p2c11/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p10/p10c11/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p8/p8c11/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p9/p9c11/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
load("C:/Users/lxy75/OneDrive/Documents/R-Project/BalancedPed/Simulations/p11/p11c11/modelSmr.RData")
View(smr1)
smr1[["parameters"]]
